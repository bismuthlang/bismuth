extern int func printf(str s, ...);
extern int func getArgCount();


define program :: c : Channel<-int> = {
    printf("why\n");
    getArgCount(); 
    var current := 20;
    printf("why2\n");
    c.send(current)
printf("why3\n");
    Channel<+int> c2 := exec simple; 
    printf("why4\n");
    int y := c2.recv(); 
printf("wh52\n");
    printf("Got: %u\n", y);
    # while true {}

    Channel<!(!+int);-int> c3 := exec bar; 

    accept(c3) {
        accept(c3) {
            int z := c3.recv(); 
            printf("z=%u\n", z);
        }
    }

    c3.send(7)
}

define simple :: c : Channel<-int> = {
    printf("And the other one!\n");
    c.send(5)

    printf("And the other one SENT!\n");
    # while true {}
}

define bar :: c : Channel<?(?-int);+int> = {

    int i := 0;

    while i < 5 {
        more(c) # FIXME: WHY ARE SOME OF THE TEST CASES NOT USED? LIKE THIS ONE WASNT TESTED...
        more(c)
        c.send(i)

        weaken(c)

        i := i + 1; 
    }

    weaken(c)
    int a := c.recv();
}