extern int func printf(str s, ...);

# Unit -> int func getMain1() {
define getMain1 :: c : Channel<-Program<-int>> = {
    # int func main(Unit u) {
    define main :: c : Channel<-int> = {
        printf("Main 1!\n");
        # return 0; 
        c.send(0)
    }

    # return main; 
    c.send(main)
}


# Unit -> int func getMain2() {
define getMain2 :: c : Channel<-Program<-int>> = {
    # int func main(Unit u) {
    define main :: c : Channel<-int> = {
        printf("Main 2!\n");
        # return 0; 
        c.send(0)
    }

    # return main; 
    c.send(main)
}

define program :: c : Channel<-int> = {
    Channel<+Program<-int>> c1 := exec getMain1; 
    Channel<+Program<-int>> c2 := exec getMain2;

    Program<-int> m1 := c1.recv(), m2 := c2.recv(); 

    Channel<+int> c1a := exec m1, c2a:= exec m2; 

    int i1 := c1a.recv(), i2 := c2a.recv(); 

    c.send(i1 + i2)
    # return main1(u) + main2(u); 
}