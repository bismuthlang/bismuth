extern int func printf(str s, ...);

define struct Empty {}

define struct IntBox {
    int number;
}

define struct IntBoxBox {
    IntBox ib; 
}

define prog1 :: c : Channel<-IntBoxBox; +Empty> = {
    # IntBox ib := IntBox::init(15); 
    IntBoxBox ib := IntBoxBox::init(IntBox::init(15));

    printf("prog1: ib.number = %u\n", ib.ib.number);
    printf("prog1: sending ib...\n")

    c.send(ib)

    Empty sig := c.recv(); 

    printf("prog1: recvd signal\n");
    printf("prog1: ib.number = %u\n", ib.ib.number);

}

define prog2 :: c : Channel<+IntBoxBox; -Empty> = {
    var ib := c.recv(); 

    printf("prog2: recvd IntBox\n");
    printf("prog2: ib.number = %u\n", ib.ib.number);

    ib.ib.number := 20; 
    printf("prog2: ib.number = %u\n", ib.ib.number);

    printf("prog2: sending signal...\n")
 
    c.send(Empty::init())
}

define program :: c : Channel<-int> = {
    var p1 := exec prog1, p2 := exec prog2; 

    var temp := p1.recv(); 
    # p2.send(p1.recv())
    p2.send(temp)

    var temp2 := p2.recv(); 
    p1.send(temp2)
    # p1.send(p2.recv())

    c.send(-1)
}
