# define func fill<T>(T[] array, T value, u32 num)
# {
#     for(u32 i := 0u32; i < num; i := i + 1u32)
#     {
#         array[i] := value; 
#     }
# }

define func fill<T>(T[] array, T value, int num)
{
    for(int i := 0; i < num; i := i + 1)
    {
        array[i] := value; 
    }

    return;
}

define program :: c : Channel<-int> {
    int[] a;
    boolean[] b; 

    # fill<int> fillInts; 
    fill<boolean> fillBools; 

    fill<int> d := fill<int>; 

    c.send(0); 
}


# define func map2<T1, T2>(T1[] a, T2[] b) : (Unit + )

/*
define func generatorFill<K>(T[] array, (T + Unit -> T) generator, int num)
{
    match generator 
        |   T val => fill(array, val, num);
        |   Unit -> T gen => {
                for(int i := 0; i < num; i := i + 1)
                {
                    array[i] := gen(); 
                }
            }
}
*/