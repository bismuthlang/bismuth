extern int func printf(...);

# proc sel1(int a) {
define sel1 :: c : Channel<+int> = {
    int a := c.recv(); 

    select {
        a <= 0 : select {
                    a < -5 : {
                                printf("Less than -5\n");
                             }
                    a < -5 : {
                                printf("Less than -5 - BROKEN\n"); # Helps to test we don't fall through. Can't actually check taht conditions are the same 
                             }
                    a < 0  : {
                                printf("Less than 0; Greater than -5\n"); 
                             }
                    a == 0  : { 
                                printf("ZERO!\n");
                             }
               }
        a == 0  : {
                    printf("Wrong zero!\n");
                 }
        a >= 5 : {
                    printf("Greater than 5\n");
                 }
        a < 5  : {
                    printf("Less than 5\n");
                 }
    }   
}

define program :: c : Channel<-int> = {

    var i := -10; 
    while i <= 15 {
        printf("For %d:\n\t", i);
        # sel1(i);
        Channel<-int> c1 := exec sel1; 
        
        c1.send(i)

        i := i + 1;
    }
    
    # return -1; 
    c.send(-1)
}
