extern int func printf(...);

# str func nestedIf(int a) {
define nestedIf :: c : Channel<+int;-str> = {
    int a := c.recv();

    if( a > 0) {
        if(a > 10)
        {
            # return "CASE 1 (10)"; 
            c.send("CASE 1 (10)")
        }
        else 
        {
            # return "CASE 2 (5)"; 
            c.send("CASE 2 (5)")
        }
    }
    else 
    {
        if( a == 0 )
        {
            # return "CASE 3 (0)";  # NOTE: DIV BY ZERO CAUSES EXCEPION?
            c.send("CASE 3 (0)")
        }
        else 
        {
            # return "CASE 4 (a)";
            c.send("CASE 4 (a)")
        }
    }

    # return "CASE IMPOSSIBLE (-1)"; 
    # c.send("CASE IMPOSSIBLE (-1)") # ADD A TEST CASE THAT CONFIRMS THIS ERROR WAS THROWN!!!
}

define program :: c : Channel<-int> = {

    var i := -10; 
    while i <= 15 {
        Channel<-int;+str> io := exec nestedIf; 
        io.send(i)
        str s := io.recv();

        # printf("f(%d) = %s\n", i, nestedIf(i));
        printf("f(%d) = %s\n", i, s);
        i := i + 1;
    }
    
    # return -1; 
    c.send(-1)
}
